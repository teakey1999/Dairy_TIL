2019/02/24
javascriptというかknockoutについて
knockoutはhtmlの変更を自動で読み取ってくれるが、
あくまで関連付けられた範囲の変更をモデルに適用するだけ。
なので、変更ならばhtmlの入力を直接モデルへの変更にできるが、
モデルの範囲の変更（追加、削除）は、モデルをJSでいじる必要がある

あと、モデルをhtml側で呼ぶとき、
ko.mappingFromJS()でデータを直接モデル化したときと、
自分でモデルを作ってその中の変数として
データをObservable化したときでは、呼び出し方がだいぶ変わるので、留意すること

2019/02/20
JavascriptというかJqueryというか・・・
〜.load()?みたいなやつでhtmlのロードとそのhtmlに適用したい関数を同時に引数にとれるんだが、
このload()、実行がどうもその関数上の最後に呼び出されている模様

例：
function.addEventListener("load",function(){
	
	func1();
	document.querySelector(".ID").load("A.html",func3());
	func2();
});
みたいに書くと、func1->func2->func3の順に実行されるらしい・・・
割と忘れがちかつはまりがちなところだ・・・
（たいてい気づくまでにconsole.log()が大量に積み重なってる）
